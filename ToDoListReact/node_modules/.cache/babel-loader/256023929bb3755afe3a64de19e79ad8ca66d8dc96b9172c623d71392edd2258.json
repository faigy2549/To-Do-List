{"ast":null,"code":"import axios from 'axios';\n\n// Set up axios defaults\nconst apiClient = axios.create({\n  baseURL: \"http://localhost:5141\",\n  // Default API base URL\n  headers: {\n    'Content-Type': 'application/json' // Default headers for JSON API\n  }\n});\n\n// Add an interceptor to handle errors globally\napiClient.interceptors.response.use(response => response,\n// Pass through the successful response\nerror => {\n  var _error$response, _error$response2;\n  console.error('API Error:', {\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n    message: error.message\n  });\n  // Optionally, handle specific status codes here\n  // Example: if (error.response?.status === 401) { handleAuthError(); }\n  return Promise.reject(error); // Re-throw the error for local handling\n});\nexport default {\n  getTasks: async () => {\n    const result = await apiClient.get('/tasks'); // Uses default baseURL\n    return result.data;\n  },\n  addTask: async name => {\n    console.log('addTask', name);\n    const result = await apiClient.post('/tasks', {\n      name,\n      isComplete: false\n    });\n    return result.data;\n  },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', {\n      id,\n      isComplete\n    });\n    const result = await apiClient.put(`/tasks/${id}`, {\n      isComplete\n    });\n    return result.data;\n  },\n  deleteTask: async id => {\n    console.log('deleteTask', {\n      id\n    });\n    await apiClient.delete(`/tasks/${id}`);\n    console.log('Task deleted');\n  }\n};","map":{"version":3,"names":["axios","apiClient","create","baseURL","headers","interceptors","response","use","error","_error$response","_error$response2","console","status","data","message","Promise","reject","getTasks","result","get","addTask","name","log","post","isComplete","setCompleted","id","put","deleteTask","delete"],"sources":["C:/Users/faigy/OneDrive/Documents/programming/Prakticode ToDo List fullstack project/ToDoListReact/src/service.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Set up axios defaults\r\nconst apiClient = axios.create({\r\n  baseURL: \"http://localhost:5141\", // Default API base URL\r\n  headers: {\r\n    'Content-Type': 'application/json', // Default headers for JSON API\r\n  },\r\n});\r\n\r\n// Add an interceptor to handle errors globally\r\napiClient.interceptors.response.use(\r\n  (response) => response, // Pass through the successful response\r\n  (error) => {\r\n    console.error('API Error:', {\r\n      status: error.response?.status,\r\n      data: error.response?.data,\r\n      message: error.message,\r\n    });\r\n    // Optionally, handle specific status codes here\r\n    // Example: if (error.response?.status === 401) { handleAuthError(); }\r\n    return Promise.reject(error); // Re-throw the error for local handling\r\n  }\r\n);\r\n\r\nexport default {\r\n  getTasks: async () => {\r\n    const result = await apiClient.get('/tasks'); // Uses default baseURL\r\n    return result.data;\r\n  },\r\n\r\n  addTask: async (name) => {\r\n    console.log('addTask', name);\r\n    const result = await apiClient.post('/tasks', { name, isComplete: false });\r\n    return result.data;\r\n  },\r\n\r\n  setCompleted: async (id, isComplete) => {\r\n    console.log('setCompleted', { id, isComplete });\r\n    const result = await apiClient.put(`/tasks/${id}`, { isComplete });\r\n    return result.data;\r\n  },\r\n\r\n  deleteTask: async (id) => {\r\n    console.log('deleteTask', { id });\r\n    await apiClient.delete(`/tasks/${id}`);\r\n    console.log('Task deleted');\r\n  },\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAE,uBAAuB;EAAE;EAClCC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB,CAAE;EACtC;AACF,CAAC,CAAC;;AAEF;AACAH,SAAS,CAACI,YAAY,CAACC,QAAQ,CAACC,GAAG,CAChCD,QAAQ,IAAKA,QAAQ;AAAE;AACvBE,KAAK,IAAK;EAAA,IAAAC,eAAA,EAAAC,gBAAA;EACTC,OAAO,CAACH,KAAK,CAAC,YAAY,EAAE;IAC1BI,MAAM,GAAAH,eAAA,GAAED,KAAK,CAACF,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBG,MAAM;IAC9BC,IAAI,GAAAH,gBAAA,GAAEF,KAAK,CAACF,QAAQ,cAAAI,gBAAA,uBAAdA,gBAAA,CAAgBG,IAAI;IAC1BC,OAAO,EAAEN,KAAK,CAACM;EACjB,CAAC,CAAC;EACF;EACA;EACA,OAAOC,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC,CAAC,CAAC;AAChC,CACF,CAAC;AAED,eAAe;EACbS,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,MAAM,GAAG,MAAMjB,SAAS,CAACkB,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC9C,OAAOD,MAAM,CAACL,IAAI;EACpB,CAAC;EAEDO,OAAO,EAAE,MAAOC,IAAI,IAAK;IACvBV,OAAO,CAACW,GAAG,CAAC,SAAS,EAAED,IAAI,CAAC;IAC5B,MAAMH,MAAM,GAAG,MAAMjB,SAAS,CAACsB,IAAI,CAAC,QAAQ,EAAE;MAAEF,IAAI;MAAEG,UAAU,EAAE;IAAM,CAAC,CAAC;IAC1E,OAAON,MAAM,CAACL,IAAI;EACpB,CAAC;EAEDY,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAEF,UAAU,KAAK;IACtCb,OAAO,CAACW,GAAG,CAAC,cAAc,EAAE;MAAEI,EAAE;MAAEF;IAAW,CAAC,CAAC;IAC/C,MAAMN,MAAM,GAAG,MAAMjB,SAAS,CAAC0B,GAAG,CAAC,UAAUD,EAAE,EAAE,EAAE;MAAEF;IAAW,CAAC,CAAC;IAClE,OAAON,MAAM,CAACL,IAAI;EACpB,CAAC;EAEDe,UAAU,EAAE,MAAOF,EAAE,IAAK;IACxBf,OAAO,CAACW,GAAG,CAAC,YAAY,EAAE;MAAEI;IAAG,CAAC,CAAC;IACjC,MAAMzB,SAAS,CAAC4B,MAAM,CAAC,UAAUH,EAAE,EAAE,CAAC;IACtCf,OAAO,CAACW,GAAG,CAAC,cAAc,CAAC;EAC7B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}