{"ast":null,"code":"import axios from'axios';// Set up axios defaults\nconst apiClient=axios.create({baseURL:\"http://localhost:5141\",// Default API base URL\nheaders:{'Content-Type':'application/json'// Default headers for JSON API\n}});// Add an interceptor to handle errors globally\napiClient.interceptors.response.use(response=>response,// Pass through the successful response\nerror=>{var _error$response,_error$response2;console.error('API Error:',{status:(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status,data:(_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data,message:error.message});// Optionally, handle specific status codes here\n// Example: if (error.response?.status === 401) { handleAuthError(); }\nreturn Promise.reject(error);// Re-throw the error for local handling\n});export default{getTasks:async()=>{const result=await apiClient.get('/tasks');// Uses default baseURL\nreturn result.data;},addTask:async name=>{console.log('addTask',name);const result=await apiClient.post('/tasks',{name,isComplete:false});return result.data;},setCompleted:async(id,isComplete)=>{console.log('setCompleted',{id,isComplete});const result=await apiClient.put(`/tasks/${id}`,{isComplete});return result.data;},deleteTask:async id=>{console.log('deleteTask',{id});await apiClient.delete(`/tasks/${id}`);console.log('Task deleted');}};","map":{"version":3,"names":["axios","apiClient","create","baseURL","headers","interceptors","response","use","error","_error$response","_error$response2","console","status","data","message","Promise","reject","getTasks","result","get","addTask","name","log","post","isComplete","setCompleted","id","put","deleteTask","delete"],"sources":["C:/Users/faigy/OneDrive/Documents/programming/Prakticode ToDo List fullstack project/ToDoListReact/src/service.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Set up axios defaults\r\nconst apiClient = axios.create({\r\n  baseURL: \"http://localhost:5141\", // Default API base URL\r\n  headers: {\r\n    'Content-Type': 'application/json', // Default headers for JSON API\r\n  },\r\n});\r\n\r\n// Add an interceptor to handle errors globally\r\napiClient.interceptors.response.use(\r\n  (response) => response, // Pass through the successful response\r\n  (error) => {\r\n    console.error('API Error:', {\r\n      status: error.response?.status,\r\n      data: error.response?.data,\r\n      message: error.message,\r\n    });\r\n    // Optionally, handle specific status codes here\r\n    // Example: if (error.response?.status === 401) { handleAuthError(); }\r\n    return Promise.reject(error); // Re-throw the error for local handling\r\n  }\r\n);\r\n\r\nexport default {\r\n  getTasks: async () => {\r\n    const result = await apiClient.get('/tasks'); // Uses default baseURL\r\n    return result.data;\r\n  },\r\n\r\n  addTask: async (name) => {\r\n    console.log('addTask', name);\r\n    const result = await apiClient.post('/tasks', { name, isComplete: false });\r\n    return result.data;\r\n  },\r\n\r\n  setCompleted: async (id, isComplete) => {\r\n    console.log('setCompleted', { id, isComplete });\r\n    const result = await apiClient.put(`/tasks/${id}`, { isComplete });\r\n    return result.data;\r\n  },\r\n\r\n  deleteTask: async (id) => {\r\n    console.log('deleteTask', { id });\r\n    await apiClient.delete(`/tasks/${id}`);\r\n    console.log('Task deleted');\r\n  },\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,SAAS,CAAGD,KAAK,CAACE,MAAM,CAAC,CAC7BC,OAAO,CAAE,uBAAuB,CAAE;AAClCC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAoB;AACtC,CACF,CAAC,CAAC,CAEF;AACAH,SAAS,CAACI,YAAY,CAACC,QAAQ,CAACC,GAAG,CAChCD,QAAQ,EAAKA,QAAQ,CAAE;AACvBE,KAAK,EAAK,KAAAC,eAAA,CAAAC,gBAAA,CACTC,OAAO,CAACH,KAAK,CAAC,YAAY,CAAE,CAC1BI,MAAM,EAAAH,eAAA,CAAED,KAAK,CAACF,QAAQ,UAAAG,eAAA,iBAAdA,eAAA,CAAgBG,MAAM,CAC9BC,IAAI,EAAAH,gBAAA,CAAEF,KAAK,CAACF,QAAQ,UAAAI,gBAAA,iBAAdA,gBAAA,CAAgBG,IAAI,CAC1BC,OAAO,CAAEN,KAAK,CAACM,OACjB,CAAC,CAAC,CACF;AACA;AACA,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC,CAAE;AAChC,CACF,CAAC,CAED,cAAe,CACbS,QAAQ,CAAE,KAAAA,CAAA,GAAY,CACpB,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAjB,SAAS,CAACkB,GAAG,CAAC,QAAQ,CAAC,CAAE;AAC9C,MAAO,CAAAD,MAAM,CAACL,IAAI,CACpB,CAAC,CAEDO,OAAO,CAAE,KAAO,CAAAC,IAAI,EAAK,CACvBV,OAAO,CAACW,GAAG,CAAC,SAAS,CAAED,IAAI,CAAC,CAC5B,KAAM,CAAAH,MAAM,CAAG,KAAM,CAAAjB,SAAS,CAACsB,IAAI,CAAC,QAAQ,CAAE,CAAEF,IAAI,CAAEG,UAAU,CAAE,KAAM,CAAC,CAAC,CAC1E,MAAO,CAAAN,MAAM,CAACL,IAAI,CACpB,CAAC,CAEDY,YAAY,CAAE,KAAAA,CAAOC,EAAE,CAAEF,UAAU,GAAK,CACtCb,OAAO,CAACW,GAAG,CAAC,cAAc,CAAE,CAAEI,EAAE,CAAEF,UAAW,CAAC,CAAC,CAC/C,KAAM,CAAAN,MAAM,CAAG,KAAM,CAAAjB,SAAS,CAAC0B,GAAG,CAAC,UAAUD,EAAE,EAAE,CAAE,CAAEF,UAAW,CAAC,CAAC,CAClE,MAAO,CAAAN,MAAM,CAACL,IAAI,CACpB,CAAC,CAEDe,UAAU,CAAE,KAAO,CAAAF,EAAE,EAAK,CACxBf,OAAO,CAACW,GAAG,CAAC,YAAY,CAAE,CAAEI,EAAG,CAAC,CAAC,CACjC,KAAM,CAAAzB,SAAS,CAAC4B,MAAM,CAAC,UAAUH,EAAE,EAAE,CAAC,CACtCf,OAAO,CAACW,GAAG,CAAC,cAAc,CAAC,CAC7B,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}